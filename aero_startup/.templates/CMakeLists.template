cmake_minimum_required(VERSION 2.8.3)
project(aero_startup)

# Dependencies

# catkin ROS
find_package(catkin REQUIRED COMPONENTS
  rospy roscpp tf std_msgs sensor_msgs roslib
  trajectory_msgs geometry_msgs nav_msgs control_msgs
  move_base_msgs
  message_generation
)
if(NOT catkin_LIBRARIES)
  message(FATAL "catkin required but not supported")
endif()

# boost
find_package(REQUIRED COMPONENTS filesystem system signals thread)
if(NOT Boost_INCLUDE_DIRS)
  message(FATAL "boost required but not supported")
else()
  include_directories(include ${Boost_INCLUDE_DIRS})
endif()

# ROS setups

set(GENERATE_SRV)
if(GENERATE_SRV)
  # auto-add services
  add_service_files(
    FILES
  )
  generate_messages(
    DEPENDENCIES
    std_msgs
    geometry_msgs
    trajectory_msgs
  )
endif()

catkin_package(
  CATKIN_DEPENDS
  roscpp tf std_msgs sensor_msgs roslib
  trajectory_msgs geometry_msgs nav_msgs control_msgs move_base_msgs
  DEPENDS
  INCLUDE_DIRS ./
  LIBRARIES aero_controllers
)

include_directories(${catkin_INCLUDE_DIRS} ${aero_startup_SOURCE_DIR})

# add c++ dependencies :
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c+11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  add_definitions(-DCXX11_SUPPORTED)
elseif(COMPILER_SUPPORTS_CXX0X)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
  add_definitions(-DCXX11_SUPPORTED)
else()
  message(FATAL "c++11 required but not supported")
endif()

add_library(aero_controllers
  aero_hardware_interface/AeroControllers.cc
  aero_hardware_interface/AeroControllerProto.cc
  aero_hardware_interface/AngleJointNames.cc
  aero_hardware_interface/Stroke2Angle.cc
  aero_hardware_interface/Angle2Stroke.cc
  )
target_link_libraries(aero_controllers ${catkin_LIBRARIES} ${Boost_LIBRARIES})
add_dependencies(aero_controllers ${PROJECT_NAME}_gencpp)

##add_executable(wait_interpolation aero_controller_manager/wait_interpolation.cc)
##target_link_libraries(wait_interpolation ${catkin_LIBRARIES})

# Executables

# >>> add controllers
# <<< add controllers

# >>> add dependencies
# <<< add dependencies

# >>> add applications
# <<< add applications
